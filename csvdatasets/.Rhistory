install.packages("flacco")
install.packages("flacco")
install.packages("XML")
install.packages("devtools")
install.packages("XML")
install.packages("xml2")
install.packages("flacco")
path.expand()
path
path.expand(path = path)
ls
ls()
list()
list.dirs()
list.files()
cd
getwd
getwd()
setwd(dir = /Project)
setwd(dir = Project)
setwd(dir = 'Project')
setwd(dir = '/Project')
setwd(dir = '/home/bssainix/Project')
list.files()
folder = '/dtlzdatasets'
list.files()
list.files()
folder = '/dtlzdatasets'
getwd()
list.files()
source('~/Projects/SurrogateModelsData/features.R')
source('~/Projects/SurrogateModelsData/features.R')
getwd()
setwd("~/Projects/SurrogateModelsData")
list.files()
list.files(folder)
list.files(path = folder)
setwd("~/Projects/SurrogateModelsData/dtlzdatasets")
list.files(path = folder)
list.files()
files = list.files()
files
for file in files:
for (file in files) {
print(file)
}
library("flacco", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.5")
setwd("~/Projects/SurrogateModelsData/csvdatasets")
file
dat = read.csv(file)
dat = read.csv(file[0,-2])
file(1:2)
file[1,2]
file[1:2]
files = list.files()
files(1)
files[1]
files[0]
files[1]
dat = read.csv(files[1])
dat
dat['X']
dat[1]
dat[1] = []
dat[1] = NULL
dat
dat = read.csv(files[1])
dat[1] = NULL
dat[1]
da
dat
dat.ndims
dim(dat)
dim(dat)[2]
dat = read.csv(files[1], labels(TRUE))
dat = read.csv(files[1], header = TRUE
)
dat
dat[1]
dat[1] = NULL
dim(dat)[2]
dat[1:dim(dat)[2]-2]
dat[1:10]
dat[1:dim(dat)[2]]
dat[1:dim(dat)[2]-2]
dat[1:(dim(dat)[2]-2)]
num_cols = dim(dat)[2]
inputs = dat[1:num_cols-2]
output = dat[1:num_cols]
feat.object = createFeatureObject(X = inputs, y = outputs)
num_cols = dim(dat)[2]
inputs = dat[1:num_cols-2]
outputs = dat[1:num_cols]
feat.object = createFeatureObject(X = inputs, y = outputs)
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[1:num_cols]
feat.object = createFeatureObject(X = inputs, y = outputs)
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
feat.object = createFeatureObject(X = inputs, y = outputs)
list(inputs)
inputs
outputs
dat = read.csv(file)
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
feat.object = createFeatureObject(X = inputs, y = outputs)
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
feat.object = createFeatureObject(X = inputs, y = outputs)
dims(inputs)
dim(inputs)
dim(outputs)
row(inputs)
X = createInitialSample(n.obs = 2000, dim = 5)
View(X)
x = array(inputs)
View(x)
View(x)
View(X)
View(X)
View(x)
View(outputs)
View(output)
View(X)
View(x)
View(X)
View(X)
x = data.frame(inputs)
View(x)
View(inputs)
X = createInitialSample(n.obs = 500, dim = 2)
View(X)
type(X)
class(X)
x = matrix(inputs)
View(x)
list(inputs)
x
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
feat.object = createFeatureObject(X = matrix(inputs), y = matrix(outputs))
length(outputs)
outputs
t(outputs)
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
feat.object = createFeatureObject(X = inputs, y = t(outputs))
View(outputs)
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
feat.object = createFeatureObject(X = t(inputs), y = t(outputs))
dim(X)
dim(inputs)
len(X)
length(X)
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
feat.object = createFeatureObject(X = inputs, y = t(outputs))
t(outputs)
dim(t(outputs))
dim(inputs)
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
feat.object = createFeatureObject(X = t(inputs), y = outputs)
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
feat.object = createFeatureObject(X = inputs, y = t(outputs))
View(X)
View(X)
class(x)
class(X)
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
feat.object = createFeatureObject(X = list(inputs), y = t(outputs))
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
feat.object = createFeatureObject(X = list(inputs), y = list(t(outputs)))
nrow((inputs))
nrow(outputs)
length(list(t(outputs)))
length((t(outputs)))
nrow(list(inputs))
nrow(array(inputs))
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
feat.object = createFeatureObject(X = array(inputs), y = list(t(outputs)))
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
feat.object = createFeatureObject(X = array(inputs), y = (t(outputs)))
class(dat)
class(dat[1])
class(dat[1][1])
inputs
class(inputs)
inputs[1]
inputs[1][1]
inputs[1,1]
class(inputs[1,1])
numeric(inputs)
y = apply(X, 1, function(x) sum(sin(x) * x^2 + (x - 0.5)^3))
num(inputs)
class(y)
double(inputs)
double(X)
double(x)
double(y)
length(y)
unlist(inputs)
x = unlist(inputs)
as.numeric((inputs))
as.numeric(unlist(inputs))
as.numeric(matrix(inputs))
as.numeric((inputs))
as.numeric(data.frame(inputs))
apply(inputs, 1 , as.numeric)
a = apply(inputs, 1 , as.numeric)
View(a)
View(a)
a = apply(inputs, 2 , as.numeric)
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
inputs = apply(inputs, 2 , as.numeric)
feat.object = createFeatureObject(X = inputs, y = outputs)
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
inputs = apply(inputs, 2 , as.numeric)
feat.object = createFeatureObject(X = inputs, y = t(outputs))
dim(inputs)
dim(outputs)
y = apply(outputs, 1, as.numeric)
dat = read.csv(files[1])
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
inputs = apply(inputs, 2 , as.numeric)
outputs = apply(outputs, 1, as.numeric)
feat.object = createFeatureObject(X = inputs, y = outputs)
View(feat.object)
View(feat.object)
calculateFeatureSet(feat.object, set = "ela_meta")
calculateFeatureSet(feat.object, set = "ela_conv")
View(feat.object)
View(feat.object)
View(feat.object)
View(feat.object)
a = calculateFeatureSet(feat.object, set = "ela_meta")
a
View(a)
View(a)
View(a)
View(a)
b = list('file':file)
data.frame((a))
data.frame(a)
a=data.frame(a)
a
b = [file , a]
b = [files[1] , a]
a.df
a.df[]
a
a[:]
a[]
View(a)
a[1]
b = a.append(a)
b = a + a
b
a
b = [a,a]
b = {a,a}
b = (a,a)
b = merge(a,a)
b
b = rbind(a,a)
b
b = rbind(c,a)
b = rbind(NULL,a)
b
library(flacco)
files = list.files()
features = NULL
for (file in files) {
dat = read.csv(file)
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
inputs = apply(inputs, 2 , as.numeric)
outputs = apply(outputs, 1, as.numeric)
feat.object = createFeatureObject(X = inputs, y = outputs)
features = rbind(features, data.frame(calculateFeatureSet(feat.object, set = "ela_meta")))
}
write.csv(files, file = 'filenames.csv')
write.csv(features, file = 'features.csv)
library(flacco)
files = list.files()
features = NULL
for (file in files) {
dat = read.csv(file)
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
inputs = apply(inputs, 2 , as.numeric)
outputs = apply(outputs, 1, as.numeric)
feat.object = createFeatureObject(X = inputs, y = outputs)
features = rbind(features, data.frame(calculateFeatureSet(feat.object, set = "ela_meta")))
}
write.csv(files, file = 'filenames.csv')
write.csv(features, file = 'features.csv')
library(flacco)
files = list.files()
features = NULL
for (file in files) {
dat = read.csv(file)
dat[1] = NULL
num_cols = dim(dat)[2]
inputs = dat[1:(num_cols-2)]
outputs = dat[num_cols]
inputs = apply(inputs, 2 , as.numeric)
outputs = apply(outputs, 1, as.numeric)
feat.object = createFeatureObject(X = inputs, y = outputs)
features = rbind(features, data.frame(calculateFeatureSet(feat.object, set = "ela_meta")))
}
write.csv(files, file = 'filenames.csv')
write.csv(features, file = 'features.csv')
